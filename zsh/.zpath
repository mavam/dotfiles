#
# zpath - Sets PATH related variables.
#

# Automatically remove duplicates from these arrays.
typeset -U path cdpath fpath manpath

# System $PATH.
path=(
  /usr/local/bin
  /usr/bin
  /bin
  /usr/local/sbin
  /usr/sbin
  /sbin
  /usr/local/share/dotnet
  ~/.dotnet/tools
  /Library/Frameworks/Mono.framework/Versions/Current/Commands
  /usr/X11R6/bin
  /usr/ucb            # SunOS
  /usr/sww/bin        # SunOS
  /usr/local/opt/coreutils/libexec/gnu
  /usr/local/opt/e2fsprogs/bin
)

# Man pages.
manpath=(
  /usr/local/man
  /usr/man
)

# OS-specific paths.
case $OSTYPE in
  darwin*)
    # MacTeX binaries.
    [[ -d /usr/texbin ]] && path=( $path /usr/texbin )
    [[ -d /Library/TeX/texbin ]] && path=( $path /Library/Tex/texbin )
    # Apple's X11 binaries.
    [[ -d /usr/X11R6/bin ]] && path=( $path /usr/X11R6/bin )
    # Default MacPorts installations.
    if [[ -d /opt/local ]]; then
      path=( /opt/local/bin /opt/local/sbin $path )
      manpath=( /opt/local/share/man $manpath )
    fi
    # Common Homebrew paths
    if [[ -d /usr/local/opt/ruby/bin ]]; then
      path=(/usr/local/opt/ruby/bin $path)
    fi
    ;;
esac

# Source local paths.
if [[ -f ~/.zpath.local ]]; then
  source ~/.zpath.local
fi

# Home prefix has highest precedence, thus sourced last.
path=( ~/bin $path )
manpath=( ~/man $manpath )
if [[ -d ~/.gem && -d ~/.gem/ruby ]]; then
  foreach dir (~/.gem/ruby/*) { [[ -d $dir/bin ]] && path=( $dir/bin $path ) }
fi

# Removes non-existent directories from an array.
clean-path () {
  local element
  local build
  build=()
  # Make sure that this works even with variables containing IFS characters,
  # if you're crazy enough to setopt shwordsplit.
  eval '
  foreach element in "$'"$1"'[@]"; do
      [[ -d "$element" ]] && build=("$build[@]" "$element")
  done
  '"$1"'=( "$build[@]" )
  '
}

# Finally, clean the path variables.
clean-path path
clean-path manpath
clean-path fpath

# vim: ft=zsh
